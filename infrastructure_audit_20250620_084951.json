{
  "audit_timestamp": "2025-06-20T08:49:51.600971+00:00",
  "summary": {
    "total_components": 38,
    "unregistered_components": 51,
    "architecture_mismatches": 38,
    "undocumented_changes": 10,
    "improvement_suggestions": 1,
    "health_score": 0
  },
  "system_components": {
    "endpoints": [
      {
        "route": "/memory",
        "methods": [
          "POST"
        ],
        "type": "flask_endpoint"
      },
      {
        "route": "/memory",
        "methods": [
          "GET"
        ],
        "type": "flask_endpoint"
      },
      {
        "route": "/gpt-memory-preview",
        "methods": [
          "GET"
        ],
        "type": "flask_endpoint"
      },
      {
        "route": "/memory/read",
        "methods": [
          "GET"
        ],
        "type": "flask_endpoint"
      },
      {
        "route": "/stats",
        "methods": [
          "GET"
        ],
        "type": "flask_endpoint"
      },
      {
        "route": "/",
        "methods": [
          "GET"
        ],
        "type": "flask_endpoint"
      },
      {
        "route": "/health",
        "methods": [
          "GET"
        ],
        "type": "flask_endpoint"
      },
      {
        "route": "/gpt-status",
        "methods": [
          "GET"
        ],
        "type": "flask_endpoint"
      },
      {
        "route": "/gpt-validation",
        "methods": [
          "POST"
        ],
        "type": "flask_endpoint"
      },
      {
        "route": "/git-sync",
        "methods": [
          "POST"
        ],
        "type": "flask_endpoint"
      }
    ],
    "functions": [
      {
        "name": "load_config",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "requires_confirmation",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "send_user_output",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "log_and_respond",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "api_output",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "ui_output",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "require_api_key",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "add_memory",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "get_memories",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "gpt_memory_preview",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "memory_read",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "get_stats",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "extract_keywords",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "calculate_importance_score",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "generate_context_summary",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "find_related_memories",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "detect_commit_type",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "log_autolog_trace",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "autolog_memory_trusted",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "autolog_memory",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "get_ml_predictions",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "find_unreviewed_logs",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "get_top_unreviewed_for_feedback",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "sort_key",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "generate_feedback_prompt",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "get_feedback_trends",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "founder_status_get",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "start_founder",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "founder_status_json",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "founder_insights",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "founder_ui",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "get_founder_intelligence",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "start_founder_mode",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "system_health",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "health_check",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "quick_health",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "gpt_status",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "gpt_validation",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "express_status",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "git_sync",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "log_to_memory",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "__init__",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "validate_fresh_connection",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "test_endpoints",
        "file": "main.py",
        "type": "function"
      },
      {
        "name": "_test_endpoint",
        "file": "main.py",
        "type": "function"
      }
    ],
    "classes": [],
    "files": [
      {
        "name": "doc_watcher.py",
        "size": 5684,
        "modified": "2025-06-19T21:11:13.999194",
        "functions": [
          "__init__",
          "load_watchlist",
          "load_previous_hashes",
          "save_hashes",
          "get_content_hash",
          "log_change_to_memory",
          "check_changes",
          "main"
        ],
        "classes": [
          "DocumentWatcher"
        ]
      },
      {
        "name": "test_autolog.py",
        "size": 2764,
        "modified": "2025-06-19T22:02:47.581175",
        "functions": [
          "test_passive_logging"
        ],
        "classes": []
      },
      {
        "name": "sync_upgrades_from_memory.py",
        "size": 8713,
        "modified": "2025-06-19T22:34:28.727139",
        "functions": [
          "load_memory_entries",
          "filter_relevant_entries",
          "load_existing_upgrades",
          "entry_already_documented",
          "format_upgrade_entry",
          "update_upgrades_file",
          "mark_entries_synced",
          "main"
        ],
        "classes": []
      },
      {
        "name": "tag_trainer.py",
        "size": 13895,
        "modified": "2025-06-19T22:50:27.317123",
        "functions": [
          "__init__",
          "load_training_data",
          "_score_to_range",
          "train_models",
          "_evaluate_models",
          "predict",
          "_fallback_prediction",
          "save_models",
          "load_models",
          "retrain_if_needed",
          "main"
        ],
        "classes": [
          "MemoryPredictor"
        ]
      },
      {
        "name": "insight_engine.py",
        "size": 25481,
        "modified": "2025-06-19T22:50:27.502123",
        "functions": [
          "__init__",
          "load_memory_data",
          "analyze_repeated_patterns",
          "detect_missed_tags",
          "find_redundant_logs",
          "analyze_trends",
          "generate_optimization_suggestions",
          "generate_learning_insights",
          "analyze_schema_health",
          "generate_summary",
          "run_full_analysis",
          "save_insights",
          "load_insights",
          "main"
        ],
        "classes": [
          "InsightEngine"
        ]
      },
      {
        "name": "tool_router.py",
        "size": 9215,
        "modified": "2025-06-19T23:30:30.626893",
        "functions": [
          "__init__",
          "route_command",
          "execute_javlin_command",
          "execute_web_search",
          "execute_internal_command",
          "process_command",
          "main",
          "test_javlin_routing",
          "test_web_search_routing",
          "test_default_routing"
        ],
        "classes": [
          "ToolRouter"
        ]
      },
      {
        "name": "infra_audit.py",
        "size": 21033,
        "modified": "2025-06-19T23:38:15.155943",
        "functions": [
          "__init__",
          "load_memory_data",
          "scan_codebase_components",
          "_analyze_flask_app",
          "_extract_functions",
          "_extract_classes",
          "detect_unregistered_components",
          "detect_architecture_mismatches",
          "analyze_recent_undocumented_changes",
          "_assess_change_impact",
          "generate_structural_improvements",
          "run_full_audit",
          "_calculate_health_score",
          "_generate_recommendations",
          "save_audit_report",
          "_generate_markdown_report",
          "main"
        ],
        "classes": [
          "InfrastructureAuditor"
        ]
      },
      {
        "name": "agent_bible_compliance_test.py",
        "size": 7276,
        "modified": "2025-06-20T01:53:40.441960",
        "functions": [
          "__init__",
          "check_agent_bible_exists",
          "check_main_py_compliance",
          "check_readme_compliance",
          "check_endpoint_compliance",
          "check_api_key_protection",
          "run_all_checks",
          "print_results",
          "main"
        ],
        "classes": [
          "AgentBibleComplianceChecker"
        ]
      },
      {
        "name": "output_compliance.py",
        "size": 15140,
        "modified": "2025-06-20T02:58:50.912838",
        "functions": [
          "__init__",
          "post_process_output",
          "_detect_action_language",
          "_generate_compliance_message",
          "_add_confirmation_note",
          "_log_gpt_drift_violation",
          "_add_pending_action",
          "get_pending_actions",
          "get_drift_violations",
          "clear_pending_action",
          "require_output_compliance",
          "decorator",
          "wrapper",
          "init_output_compliance"
        ],
        "classes": [
          "OutputCompliance"
        ]
      },
      {
        "name": "compliance_linter.py",
        "size": 11988,
        "modified": "2025-06-20T03:08:51.541574",
        "functions": [
          "__init__",
          "scan_file",
          "_get_function_at_line",
          "_find_flask_routes",
          "_has_compliance_decorator",
          "_has_compliance_imports",
          "scan_directory",
          "generate_report",
          "main"
        ],
        "classes": [
          "ComplianceLinter"
        ]
      },
      {
        "name": "compliance_tests.py",
        "size": 10966,
        "modified": "2025-06-20T03:08:51.778574",
        "functions": [
          "setUp",
          "tearDown",
          "test_action_language_detection",
          "test_safe_content_allowed",
          "test_confirmation_override",
          "test_compliance_levels",
          "test_audit_logging",
          "test_decorator_enforcement",
          "test_api_function",
          "test_centralized_output_functions",
          "test_bypass_detection",
          "test_compliance_stats",
          "setUp",
          "tearDown",
          "test_flask_route_compliance",
          "compliant_route",
          "non_compliant_route",
          "test_memory_system_compliance",
          "test_logging_compliance"
        ],
        "classes": [
          "TestUniversalCompliance",
          "TestEndToEndCompliance"
        ]
      },
      {
        "name": "proactive_founder.py",
        "size": 17861,
        "modified": "2025-06-20T03:27:18.494259",
        "functions": [
          "__init__",
          "start_living_awareness",
          "_continuous_monitoring",
          "_monitor_system_state",
          "_detect_health_changes",
          "_react_to_health_changes",
          "_handle_server_downtime",
          "_handle_server_recovery",
          "_perform_deep_analysis",
          "_analyze_memory_patterns",
          "_generate_strategic_insights",
          "_generate_contextual_insight",
          "_surface_strategic_insight",
          "_log_founder_decision",
          "_log_insight_to_memory",
          "get_founder_status",
          "stop_monitoring",
          "init_proactive_founder",
          "start_founder_mode",
          "get_founder_intelligence"
        ],
        "classes": [
          "ProactiveFounder"
        ]
      },
      {
        "name": "bible_compliance.py",
        "size": 22640,
        "modified": "2025-06-20T03:39:19.362780",
        "functions": [
          "__init__",
          "load_bible_policies",
          "_extract_policies",
          "_extract_compliance_rules",
          "requires_confirmation",
          "confirmation_decorator",
          "confirmation_wrapper",
          "_check_confirmation_requirement",
          "validate_memory_entry",
          "check_replit_connection",
          "require_fresh_connection_check",
          "run_compliance_audit",
          "init_bible_compliance",
          "requires_confirmation",
          "confirmation_decorator",
          "confirmation_wrapper"
        ],
        "classes": [
          "BibleCompliance"
        ]
      },
      {
        "name": "session_manager.py",
        "size": 14738,
        "modified": "2025-06-20T03:39:20.007778",
        "functions": [
          "__init__",
          "generate_session_id",
          "save_session",
          "load_session",
          "get_session_history",
          "clear_session",
          "_get_recent_memories",
          "_get_build_state",
          "_get_daily_focus",
          "_log_session_event",
          "generate_session_summary",
          "__init__",
          "save_session",
          "load_session"
        ],
        "classes": [
          "SessionManager",
          "SessionManager"
        ]
      },
      {
        "name": "performance_config.py",
        "size": 1484,
        "modified": "2025-06-20T04:18:09.677937",
        "functions": [
          "optimize_memory_file"
        ],
        "classes": []
      },
      {
        "name": "git_merge_divergent.py",
        "size": 17192,
        "modified": "2025-06-20T05:02:21.333139",
        "functions": [
          "__init__",
          "log",
          "run_command",
          "_get_remote_url",
          "backup_workspace",
          "check_git_processes",
          "cleanup_git_locks",
          "check_git_status",
          "stash_local_changes",
          "create_local_branch",
          "fetch_remote_main",
          "checkout_remote_main",
          "create_memoryos_subdirectory",
          "merge_local_project",
          "resolve_conflicts_if_any",
          "push_to_remote",
          "cleanup_branches",
          "verify_merge_result",
          "generate_rollback_script",
          "execute_full_merge",
          "main"
        ],
        "classes": [
          "GitDivergenceResolver"
        ]
      },
      {
        "name": "auto_merge_prep.py",
        "size": 2220,
        "modified": "2025-06-20T05:02:21.558139",
        "functions": [
          "main"
        ],
        "classes": []
      },
      {
        "name": "check_git_state.py",
        "size": 12050,
        "modified": "2025-06-20T05:09:31.884817",
        "functions": [
          "run_command",
          "check_git_processes",
          "safe_cleanup_git_locks",
          "check_git_state"
        ],
        "classes": []
      },
      {
        "name": "manual_git_cleanup.py",
        "size": 3752,
        "modified": "2025-06-20T05:09:35.909814",
        "functions": [
          "force_cleanup_git_locks",
          "reset_git_state"
        ],
        "classes": []
      },
      {
        "name": "replit_git_force_cleanup.py",
        "size": 10938,
        "modified": "2025-06-20T05:13:15.499665",
        "functions": [
          "__init__",
          "find_all_lock_files",
          "kill_git_processes",
          "force_remove_lock",
          "_method_chmod_remove",
          "_method_subprocess_rm",
          "_method_dd_overwrite",
          "_method_move_and_remove",
          "reset_git_directory_permissions",
          "pause_replit_services",
          "resume_replit_services",
          "nuclear_cleanup",
          "execute_cleanup",
          "main"
        ],
        "classes": [
          "ReplitGitForceCleanup"
        ]
      },
      {
        "name": "replit_merge_workflow.py",
        "size": 10766,
        "modified": "2025-06-20T05:13:15.723665",
        "functions": [
          "__init__",
          "log",
          "check_replit_readiness",
          "wait_for_quiet_period",
          "execute_cleanup_with_retries",
          "_manual_cleanup",
          "verify_git_state",
          "execute_merge",
          "run_complete_workflow",
          "main"
        ],
        "classes": [
          "ReplitMergeWorkflow"
        ]
      },
      {
        "name": "force_git_cleanup.py",
        "size": 2322,
        "modified": "2025-06-20T05:25:15.159208",
        "functions": [
          "force_cleanup_git_locks"
        ],
        "classes": []
      },
      {
        "name": "task_runner.py",
        "size": 9704,
        "modified": "2025-06-20T07:05:33.342724",
        "functions": [
          "__init__",
          "get_queue_file_mtime",
          "has_queue_changed",
          "load_task_queue",
          "clear_task_queue",
          "load_task_output",
          "save_task_output",
          "execute_command",
          "process_tasks",
          "run",
          "main"
        ],
        "classes": [
          "TaskRunner"
        ]
      },
      {
        "name": "compliance_middleware.py",
        "size": 25286,
        "modified": "2025-06-20T07:05:34.080723",
        "functions": [
          "__init__",
          "_load_compliance_config",
          "validate_output",
          "_detect_compliance_violations",
          "_generate_compliance_blocked_message",
          "_add_compliance_warning",
          "_create_audit_log",
          "_detect_bypass_attempt",
          "_log_bypass_attempt",
          "_log_bypass_to_memory",
          "get_compliance_stats",
          "_get_bypass_count",
          "init_compliance_middleware",
          "require_compliance",
          "decorator",
          "wrapper",
          "api_output",
          "ui_output",
          "log_output",
          "chat_output",
          "send_user_output",
          "log_and_respond",
          "__init__",
          "validate_output",
          "init_compliance_middleware",
          "send_user_output",
          "log_and_respond",
          "api_output",
          "wrapper",
          "ui_output",
          "wrapper"
        ],
        "classes": [
          "OutputChannel",
          "ComplianceLevel",
          "OutputContext",
          "ComplianceResult",
          "UniversalComplianceMiddleware",
          "OutputChannel",
          "ComplianceMiddleware"
        ]
      },
      {
        "name": "git_integration_disabled.py",
        "size": 1404,
        "modified": "2025-06-20T07:05:34.257722",
        "functions": [
          "is_git_automation_enabled",
          "get_git_status",
          "require_manual_git_message"
        ],
        "classes": []
      },
      {
        "name": "connection_validator.py",
        "size": 9470,
        "modified": "2025-06-20T07:14:46.391917",
        "functions": [
          "__init__",
          "validate_fresh_connection",
          "_get_required_endpoints",
          "_test_endpoint",
          "_cache_validation",
          "_log_validation",
          "get_cached_validation",
          "force_fresh_validation"
        ],
        "classes": [
          "ConnectionValidator"
        ]
      },
      {
        "name": "gpt_integration.py",
        "size": 8550,
        "modified": "2025-06-20T08:28:37.489558",
        "functions": [
          "__init__",
          "validate_before_response",
          "get_live_system_health",
          "check_compliance_before_claim",
          "get_replit_context",
          "generate_compliant_response",
          "must_validate_before_response",
          "get_live_replit_state",
          "check_if_claim_allowed"
        ],
        "classes": [
          "GPTReplitIntegration"
        ]
      },
      {
        "name": "gpt_session_transition.py",
        "size": 7388,
        "modified": "2025-06-20T08:28:37.780557",
        "functions": [
          "__init__",
          "prepare_new_session_context",
          "generate_new_session_prompt",
          "save_transition_log",
          "main"
        ],
        "classes": [
          "GPTSessionTransition"
        ]
      }
    ],
    "configurations": {
      "config.json": {
        "exists": true,
        "size": 555,
        "modified": "2025-06-20T03:57:13.336559"
      },
      "version.json": {
        "exists": true,
        "size": 1901,
        "modified": "2025-06-20T04:22:22.085411"
      },
      "pyproject.toml": {
        "exists": true,
        "size": 323,
        "modified": "2025-06-20T04:19:31.771766"
      },
      ".replit": {
        "exists": true,
        "size": 1426,
        "modified": "2025-06-20T05:48:39.199354"
      }
    },
    "dependencies": []
  },
  "findings": {
    "unregistered_components": [
      {
        "type": "endpoint",
        "component": "/autolog",
        "mentioned_in": "2025-06-19T22:05:20.717222+00:00",
        "context": "Autolog System Upgrade Test",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/autolog",
        "mentioned_in": "2025-06-19T22:05:20.717222+00:00",
        "context": "Autolog System Upgrade Test",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/autolog",
        "mentioned_in": "2025-06-19T22:05:53.944609+00:00",
        "context": "Autolog Full System Test",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/context",
        "mentioned_in": "2025-06-19T22:17:40.708036+00:00",
        "context": "Full System Integration Complete",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/SystemUpdate",
        "mentioned_in": "2025-06-19T22:33:47.517550+00:00",
        "context": "Git Commit: Checkpoint before assistant change: Add tool that ...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/autolog",
        "mentioned_in": "2025-06-19T22:40:43.149300+00:00",
        "context": "Natural Language Autolog Parsing Plan",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/feedback",
        "mentioned_in": "2025-06-19T22:50:58.246354+00:00",
        "context": "Git Commit: Assistant checkpoint: Enhanced Javlin with ML lear...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/autolog",
        "mentioned_in": "2025-06-19T22:50:58.246354+00:00",
        "context": "Git Commit: Assistant checkpoint: Enhanced Javlin with ML lear...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/digestSo",
        "mentioned_in": "2025-06-19T22:50:58.246354+00:00",
        "context": "Git Commit: Assistant checkpoint: Enhanced Javlin with ML lear...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/autolog",
        "mentioned_in": "2025-06-19T22:57:06.453451+00:00",
        "context": "Git Commit: Assistant checkpoint: Add trusted agent autolog wi...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/autolog",
        "mentioned_in": "2025-06-19T22:57:06.453451+00:00",
        "context": "Git Commit: Assistant checkpoint: Add trusted agent autolog wi...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/autolog",
        "mentioned_in": "2025-06-19T22:59:03.009977+00:00",
        "context": "Trusted Autologging Activated",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/7",
        "mentioned_in": "2025-06-19T23:21:23.099855+00:00",
        "context": "Javlin Memory API Deployed (Autoscale)",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/insights",
        "mentioned_in": "2025-06-19T23:33:16.746197+00:00",
        "context": "Scalable Infrastructure and Audit Layer",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/auditBonus",
        "mentioned_in": "2025-06-19T23:38:18.266767+00:00",
        "context": "Git Commit: Assistant checkpoint: Infrastructure audit module ...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/insights",
        "mentioned_in": "2025-06-19T23:38:18.266767+00:00",
        "context": "Git Commit: Assistant checkpoint: Infrastructure audit module ...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/audit",
        "mentioned_in": "2025-06-19T23:38:59.078718+00:00",
        "context": "Infrastructure Audit System Implemented",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/audit",
        "mentioned_in": "2025-06-19T23:38:59.078718+00:00",
        "context": "Infrastructure Audit System Implemented",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/commit_log/memory/version",
        "mentioned_in": "2025-06-20T00:20:27.512581+00:00",
        "context": "Git Commit: Checkpoint before assistant change: Automate GitHu...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/context",
        "mentioned_in": "2025-06-20T00:23:57.948756+00:00",
        "context": "Seamless Chat Switching Operational",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/system",
        "mentioned_in": "2025-06-20T00:32:48.462366+00:00",
        "context": "Git Commit: Checkpoint before assistant change: Record recent ...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/system",
        "mentioned_in": "2025-06-20T00:33:18.332208+00:00",
        "context": "Git Commit: Checkpoint before assistant change: Record recentl...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/index",
        "mentioned_in": "2025-06-20T00:37:28.962039+00:00",
        "context": "Replit Git Identity Loop",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/adkinsd226",
        "mentioned_in": "2025-06-20T00:46:29.566294+00:00",
        "context": "Git Identity Verification Flow Finalized",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/task-output",
        "mentioned_in": "2025-06-20T01:18:57.201403+00:00",
        "context": "Round-Trip Command Validation Live",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/localhost",
        "mentioned_in": "2025-06-20T01:18:57.201403+00:00",
        "context": "Round-Trip Command Validation Live",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/task-output",
        "mentioned_in": "2025-06-20T01:18:57.201403+00:00",
        "context": "Round-Trip Command Validation Live",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/task-output",
        "mentioned_in": "2025-06-20T01:27:56.297080+00:00",
        "context": "Git Commit: Checkpoint before assistant change: Add new system...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/last-commit",
        "mentioned_in": "2025-06-20T01:27:56.297080+00:00",
        "context": "Git Commit: Checkpoint before assistant change: Add new system...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/system-health",
        "mentioned_in": "2025-06-20T01:27:56.297080+00:00",
        "context": "Git Commit: Checkpoint before assistant change: Add new system...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/task-output",
        "mentioned_in": "2025-06-20T01:28:48.440070+00:00",
        "context": "Git Commit: Assistant checkpoint: Added system validation endp...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/last-commit",
        "mentioned_in": "2025-06-20T01:28:48.440070+00:00",
        "context": "Git Commit: Assistant checkpoint: Added system validation endp...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/logs/HEAD",
        "mentioned_in": "2025-06-20T01:28:48.440070+00:00",
        "context": "Git Commit: Assistant checkpoint: Added system validation endp...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/system-health",
        "mentioned_in": "2025-06-20T01:28:48.440070+00:00",
        "context": "Git Commit: Assistant checkpoint: Added system validation endp...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/task-output",
        "mentioned_in": "2025-06-20T01:29:12.112306+00:00",
        "context": "Feedback Layer Validation Endpoints",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/last-commit",
        "mentioned_in": "2025-06-20T01:29:12.112306+00:00",
        "context": "Feedback Layer Validation Endpoints",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/system-health",
        "mentioned_in": "2025-06-20T01:29:12.112306+00:00",
        "context": "Feedback Layer Validation Endpoints",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/workflows/agent_bible_compliance",
        "mentioned_in": "2025-06-20T01:53:44.304555+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement AGENT_BIBLE.md com...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/onboarding",
        "mentioned_in": "2025-06-20T01:53:44.304555+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement AGENT_BIBLE.md com...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/can",
        "mentioned_in": "2025-06-20T01:53:44.304555+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement AGENT_BIBLE.md com...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/system-health",
        "mentioned_in": "2025-06-20T01:53:44.304555+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement AGENT_BIBLE.md com...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/status",
        "mentioned_in": "2025-06-20T01:53:44.304555+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement AGENT_BIBLE.md com...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/UI",
        "mentioned_in": "2025-06-20T01:53:44.304555+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement AGENT_BIBLE.md com...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/agent",
        "mentioned_in": "2025-06-20T01:53:44.304555+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement AGENT_BIBLE.md com...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/connection-status",
        "mentioned_in": "2025-06-20T02:49:22.678585+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement connection-first c...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/product",
        "mentioned_in": "2025-06-20T02:49:22.678585+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement connection-first c...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/MemoryOS",
        "mentioned_in": "2025-06-20T02:58:57.408368+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement output compliance ...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/endpoint",
        "mentioned_in": "2025-06-20T02:58:57.408368+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement output compliance ...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/operator",
        "mentioned_in": "2025-06-20T02:58:57.408368+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement output compliance ...",
        "source": "memory_log"
      },
      {
        "type": "endpoint",
        "component": "/Chat",
        "mentioned_in": "2025-06-20T02:58:57.408368+00:00",
        "context": "Git Commit: Assistant checkpoint: Implement output compliance ...",
        "source": "memory_log"
      },
      {
        "type": "potential_feature",
        "component": "Feedback Layer Validation Endpoints",
        "mentioned_in": "2025-06-20T01:29:12.112306+00:00",
        "context": "Flask API now includes comprehensive validation: task results, git sync state, active routes, memory",
        "source": "feature_log"
      }
    ],
    "architecture_mismatches": [
      {
        "type": "missing_endpoint",
        "component": "/can",
        "severity": "medium",
        "description": "Endpoint /can mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/workflows",
        "severity": "medium",
        "description": "Endpoint /workflows mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/connection-status",
        "severity": "medium",
        "description": "Endpoint /connection-status mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/agent",
        "severity": "medium",
        "description": "Endpoint /agent mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/autolog",
        "severity": "medium",
        "description": "Endpoint /autolog mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/localhost",
        "severity": "medium",
        "description": "Endpoint /localhost mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/index",
        "severity": "medium",
        "description": "Endpoint /index mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/SystemUpdate",
        "severity": "medium",
        "description": "Endpoint /SystemUpdate mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/auditBonus",
        "severity": "medium",
        "description": "Endpoint /auditBonus mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/status",
        "severity": "medium",
        "description": "Endpoint /status mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/task-output",
        "severity": "medium",
        "description": "Endpoint /task-output mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/commit_log",
        "severity": "medium",
        "description": "Endpoint /commit_log mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/last-commit",
        "severity": "medium",
        "description": "Endpoint /last-commit mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/system-health",
        "severity": "medium",
        "description": "Endpoint /system-health mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/logs",
        "severity": "medium",
        "description": "Endpoint /logs mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/HEAD",
        "severity": "medium",
        "description": "Endpoint /HEAD mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/7",
        "severity": "medium",
        "description": "Endpoint /7 mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/Chat",
        "severity": "medium",
        "description": "Endpoint /Chat mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/system",
        "severity": "medium",
        "description": "Endpoint /system mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/digestSo",
        "severity": "medium",
        "description": "Endpoint /digestSo mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/operator",
        "severity": "medium",
        "description": "Endpoint /operator mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/audit",
        "severity": "medium",
        "description": "Endpoint /audit mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/context",
        "severity": "medium",
        "description": "Endpoint /context mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/product",
        "severity": "medium",
        "description": "Endpoint /product mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/insights",
        "severity": "medium",
        "description": "Endpoint /insights mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/version",
        "severity": "medium",
        "description": "Endpoint /version mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/UI",
        "severity": "medium",
        "description": "Endpoint /UI mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/MemoryOS",
        "severity": "medium",
        "description": "Endpoint /MemoryOS mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/digest",
        "severity": "medium",
        "description": "Endpoint /digest mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/onboarding",
        "severity": "medium",
        "description": "Endpoint /onboarding mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/adkinsd226",
        "severity": "medium",
        "description": "Endpoint /adkinsd226 mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/endpoint",
        "severity": "medium",
        "description": "Endpoint /endpoint mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/agent_bible_compliance",
        "severity": "medium",
        "description": "Endpoint /agent_bible_compliance mentioned in logs but not found in codebase"
      },
      {
        "type": "missing_endpoint",
        "component": "/feedback",
        "severity": "medium",
        "description": "Endpoint /feedback mentioned in logs but not found in codebase"
      },
      {
        "type": "planned_but_not_implemented",
        "component": "Full state awareness",
        "severity": "low",
        "description": "Feature 'Full state awareness' planned but no implementation logs found"
      },
      {
        "type": "planned_but_not_implemented",
        "component": "Git commit integration",
        "severity": "low",
        "description": "Feature 'Git commit integration' planned but no implementation logs found"
      },
      {
        "type": "planned_but_not_implemented",
        "component": "Feedback system",
        "severity": "low",
        "description": "Feature 'Feedback system' planned but no implementation logs found"
      },
      {
        "type": "planned_but_not_implemented",
        "component": "Advanced memory analytics",
        "severity": "low",
        "description": "Feature 'Advanced memory analytics' planned but no implementation logs found"
      }
    ],
    "undocumented_changes": [
      {
        "timestamp": "2025-06-20T01:51:44.074160+00:00",
        "topic": "Git Commit: Checkpoint before assistant change: Document agent...",
        "type": "Feature",
        "description": "Committed changes with hash 56e9e219",
        "category": "development",
        "impact": "low"
      },
      {
        "timestamp": "2025-06-20T01:53:44.304555+00:00",
        "topic": "Git Commit: Assistant checkpoint: Implement AGENT_BIBLE.md com...",
        "type": "Feature",
        "description": "Committed changes with hash 3480ce2a",
        "category": "development",
        "impact": "low"
      },
      {
        "timestamp": "2025-06-20T02:32:07.054084+00:00",
        "topic": "Git Commit: Checkpoint before assistant change: Enhance the AI...",
        "type": "Feature",
        "description": "Committed changes with hash 7d0b98d8",
        "category": "development",
        "impact": "low"
      },
      {
        "timestamp": "2025-06-20T02:42:43.877014+00:00",
        "topic": "Git Commit: Assistant checkpoint: Context rehydration workflow...",
        "type": "Feature",
        "description": "Committed changes with hash e92ea27d",
        "category": "development",
        "impact": "low"
      },
      {
        "timestamp": "2025-06-20T02:44:07.652864+00:00",
        "topic": "Git Commit: Checkpoint before assistant change: Ensure reliabl...",
        "type": "Feature",
        "description": "Committed changes with hash 11acf636",
        "category": "development",
        "impact": "low"
      },
      {
        "timestamp": "2025-06-20T02:45:45.532356+00:00",
        "topic": "Git Commit: Checkpoint before assistant change: Ensure agent c...",
        "type": "Feature",
        "description": "Committed changes with hash a7ca2530",
        "category": "development",
        "impact": "low"
      },
      {
        "timestamp": "2025-06-20T02:49:22.678585+00:00",
        "topic": "Git Commit: Assistant checkpoint: Implement connection-first c...",
        "type": "Feature",
        "description": "Committed changes with hash a6e8f9df",
        "category": "development",
        "impact": "low"
      },
      {
        "timestamp": "2025-06-20T02:54:50.157441+00:00",
        "topic": "Git Commit: Checkpoint before assistant change: Enforce agent ...",
        "type": "Feature",
        "description": "Committed changes with hash 101eeace",
        "category": "development",
        "impact": "low"
      },
      {
        "timestamp": "2025-06-20T02:58:57.408368+00:00",
        "topic": "Git Commit: Assistant checkpoint: Implement output compliance ...",
        "type": "Feature",
        "description": "Committed changes with hash 042bd668",
        "category": "development",
        "impact": "low"
      },
      {
        "timestamp": "2025-06-20T04:03:34.327772+00:00",
        "topic": "Manual GitHub Sync",
        "type": "SystemUpdate",
        "description": "Sync result: error. Failed to commit and push changes",
        "category": "development",
        "impact": "low"
      }
    ],
    "structural_improvements": [
      {
        "type": "refactoring",
        "priority": "medium",
        "description": "main.py has 45 functions. Consider splitting into modules.",
        "suggestion": "Create separate modules for authentication, memory management, and analytics"
      }
    ]
  },
  "recommendations": [
    "Register 51 untracked components in system documentation"
  ]
}