Implement and enforce the following upgrades for the Javlin/MemoryOS system, referencing all foundational documentation:

---

1. **Bible Integration and Enforcement**
   - Parse AGENT_BIBLE.md, MEMORY_BIBLE.md, and PRODUCT_BIBLE.md as live policy/data objects on agent/server startup.
   - All agent actions, confirmations, logs, and user-facing outputs must comply with bible rules.
   - Any claim of “live,” “complete,” or “feature shipped” requires API or explicit user confirmation per bible rules.
   - Add a compliance decorator (e.g., @requires_confirmation) to all agent/logic actions.
   - All BuildLogs and memory entries must include a `confirmed: true/false` flag, with a reference to the confirmation method (API, endpoint, or human).

---

2. **Replit Connection Validation**
   - Before any agent or pipeline claim of completion, require a real-time connection check to Replit or target backend.
   - Add `replit_connection_confirmed: true/false` to BuildLogs and action logs.
   - Block or delay all “live” outputs if connection is not confirmed. Surface “pending confirmation” status and prompt for manual review.
   - Synchronize agent output timing so that LLM/agent statements never outpace actual backend confirmation.

---

3. **Session Context and Rehydration**
   - Implement session_manager.py (or equivalent) to persist and restore user context (memories, threads, agent mode) on session exit and startup.
   - Add /session/load, /session/save, /session/history, /session/clear endpoints.
   - All context switches are logged as BuildLogs with confirmation and change analysis.
   - On new session/chat, agent should present a summary of restored state, pending actions, and recent logs.

---

4. **Creative Output Guardrails**
   - Allow ideation and creative/generative outputs only if they do not violate bible policy.
   - Tag all “inspiration” or brainstorm outputs for manual review before entry into production memory/workflows.
   - All creative outputs must state boundaries: “Product-ready” or “for ideation only.”

---

5. **Documentation, Onboarding, and Compliance**
   - All onboarding, UI flows, and API endpoints must reference the relevant bible docs.
   - README.md should point to every .md as source of truth.
   - Add or update SECURITY_BIBLE.md, PRIVACY_POLICY.md, CONTRIBUTING.md, API_REFERENCE.md, CHANGELOG.md as per latest drafts.
   - System health endpoints and onboarding must surface bible compliance and system boundaries.

---

6. **Compliance and Test Coverage**
   - Add a compliance checker (endpoint or CLI) that runs routine audits of agent, memory, and product logic against bible policy.
   - Block or flag any drift or rule violation for review before deployment.

---

**This prompt is a single, all-in-one operational upgrade for a client-ready, audit-proof, product-first AI agent system. Implement each feature to full completion, and log every major action per BuildLog standards.**
